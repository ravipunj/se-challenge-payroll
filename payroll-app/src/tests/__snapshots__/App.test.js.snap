// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App matches snapshot 1`] = `
ReactWrapper {
  "length": 1,
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": App {
      "_reactInternalFiber": FiberNode {
        "_debugID": 5,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="container"
                  >
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                                        style="text-align: center;"
                                                      >
                                                                        <h1>
                                                                                          Payroll
                                                                        </h1>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <form
                                                                                          action="#"
                                                                                          style="text-align: center;"
                                                                        >
                                                                                          <fieldset>
                                                                                                            <h4>
                                                                                                                              Upload Payroll Report CSV
                                                                                                            </h4>
                                                                                                            <input
                                                                                                                              type="file"
                                                                                                                              id="reportFile"
                                                                                                            />
                                                                                                            <input
                                                                                                                              type="submit"
                                                                                                                              class="button-primary"
                                                                                                                              value="Upload"
                                                                                                            />
                                                                                          </fieldset>
                                                                        </form>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="container"
                >
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                                style="text-align: center;"
                                                >
                                                                <h1>
                                                                                Payroll
                                                                </h1>
                                                </div>
                                </div>
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                >
                                                                <hr />
                                                </div>
                                </div>
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                >
                                                                <form
                                                                                action="#"
                                                                                style="text-align: center;"
                                                                >
                                                                                <fieldset>
                                                                                                <h4>
                                                                                                                Upload Payroll Report CSV
                                                                                                </h4>
                                                                                                <input
                                                                                                                type="file"
                                                                                                                id="reportFile"
                                                                                                />
                                                                                                <input
                                                                                                                type="submit"
                                                                                                                class="button-primary"
                                                                                                                value="Upload"
                                                                                                />
                                                                                </fieldset>
                                                                </form>
                                                </div>
                                </div>
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                >
                                                                <hr />
                                                </div>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 6,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
            "lineNumber": 10,
          },
          "alternate": null,
          "child": FiberNode {
            "_debugID": 7,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
              "lineNumber": 11,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 11,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Title.js",
                "lineNumber": 4,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 12,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Title.js",
                  "lineNumber": 5,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 13,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Title.js",
                    "lineNumber": 6,
                  },
                  "alternate": null,
                  "child": null,
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "Payroll",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "Payroll",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <h1>
                    Payroll
</h1>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "h1",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <h1>
                    Payroll
</h1>,
                  "className": "column",
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <h1>
                    Payroll
</h1>,
                  "className": "column",
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="column"
                  style="text-align: center;"
>
                  <h1>
                                    Payroll
                  </h1>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 0,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <div
                  className="column"
                  style={
                                    Object {
                                                      "textAlign": "center",
                                                    }
                  }
>
                  <h1>
                                    Payroll
                  </h1>
</div>,
                "className": "row",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <div
                  className="column"
                  style={
                                    Object {
                                                      "textAlign": "center",
                                                    }
                  }
>
                  <h1>
                                    Payroll
                  </h1>
</div>,
                "className": "row",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": <div
                class="row"
>
                <div
                                class="column"
                                style="text-align: center;"
                >
                                <h1>
                                                Payroll
                                </h1>
                </div>
</div>,
              "tag": 5,
              "treeBaseTime": 0,
              "type": "div",
              "updateQueue": null,
            },
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {},
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {},
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": FiberNode {
              "_debugID": 8,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                "lineNumber": 12,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 14,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                  "lineNumber": 4,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 15,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                    "lineNumber": 5,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 16,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                      "lineNumber": 5,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <hr />,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "hr",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <hr />,
                    "className": "column",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <hr />,
                    "className": "column",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="column"
>
                    <hr />
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="column"
>
                    <hr />
</div>,
                  "className": "row",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <div
                    className="column"
>
                    <hr />
</div>,
                  "className": "row",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="row"
>
                  <div
                                    class="column"
                  >
                                    <hr />
                  </div>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 9,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                  "lineNumber": 13,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 17,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                    "lineNumber": 4,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 18,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                      "lineNumber": 5,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 19,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                        "lineNumber": 6,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 20,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                          "lineNumber": 7,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 21,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                            "lineNumber": 8,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "Upload Payroll Report CSV",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "Upload Payroll Report CSV",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": FiberNode {
                            "_debugID": 22,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                              "lineNumber": 9,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "id": "reportFile",
                              "type": "file",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "id": "reportFile",
                              "type": "file",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 23,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                                "lineNumber": 10,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "className": "button-primary",
                                "type": "submit",
                                "value": "Upload",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "className": "button-primary",
                                "type": "submit",
                                "value": "Upload",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": null,
                              "stateNode": <input
                                type="submit"
                                class="button-primary"
                                value="Upload"
/>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <input
                              type="file"
                              id="reportFile"
/>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "input",
                            "updateQueue": null,
                          },
                          "stateNode": <h4>
                            Upload Payroll Report CSV
</h4>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "h4",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <h4>
                              Upload Payroll Report CSV
</h4>,
                            <input
                              id="reportFile"
                              type="file"
/>,
                            <input
                              className="button-primary"
                              type="submit"
                              value="Upload"
/>,
                          ],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <h4>
                              Upload Payroll Report CSV
</h4>,
                            <input
                              id="reportFile"
                              type="file"
/>,
                            <input
                              className="button-primary"
                              type="submit"
                              value="Upload"
/>,
                          ],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <fieldset>
                          <h4>
                                                    Upload Payroll Report CSV
                          </h4>
                          <input
                                                    type="file"
                                                    id="reportFile"
                          />
                          <input
                                                    type="submit"
                                                    class="button-primary"
                                                    value="Upload"
                          />
</fieldset>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "fieldset",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "action": "#",
                        "children": <fieldset>
                          <h4>
                                                    Upload Payroll Report CSV
                          </h4>
                          <input
                                                    id="reportFile"
                                                    type="file"
                          />
                          <input
                                                    className="button-primary"
                                                    type="submit"
                                                    value="Upload"
                          />
</fieldset>,
                        "style": Object {
                          "textAlign": "center",
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "action": "#",
                        "children": <fieldset>
                          <h4>
                                                    Upload Payroll Report CSV
                          </h4>
                          <input
                                                    id="reportFile"
                                                    type="file"
                          />
                          <input
                                                    className="button-primary"
                                                    type="submit"
                                                    value="Upload"
                          />
</fieldset>,
                        "style": Object {
                          "textAlign": "center",
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <form
                        action="#"
                        style="text-align: center;"
>
                        <fieldset>
                                                <h4>
                                                                        Upload Payroll Report CSV
                                                </h4>
                                                <input
                                                                        type="file"
                                                                        id="reportFile"
                                                />
                                                <input
                                                                        type="submit"
                                                                        class="button-primary"
                                                                        value="Upload"
                                                />
                        </fieldset>
</form>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "form",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <form
                        action="#"
                        style={
                                                Object {
                                                                        "textAlign": "center",
                                                                      }
                        }
>
                        <fieldset>
                                                <h4>
                                                                        Upload Payroll Report CSV
                                                </h4>
                                                <input
                                                                        id="reportFile"
                                                                        type="file"
                                                />
                                                <input
                                                                        className="button-primary"
                                                                        type="submit"
                                                                        value="Upload"
                                                />
                        </fieldset>
</form>,
                      "className": "column",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <form
                        action="#"
                        style={
                                                Object {
                                                                        "textAlign": "center",
                                                                      }
                        }
>
                        <fieldset>
                                                <h4>
                                                                        Upload Payroll Report CSV
                                                </h4>
                                                <input
                                                                        id="reportFile"
                                                                        type="file"
                                                />
                                                <input
                                                                        className="button-primary"
                                                                        type="submit"
                                                                        value="Upload"
                                                />
                        </fieldset>
</form>,
                      "className": "column",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="column"
>
                      <form
                                            action="#"
                                            style="text-align: center;"
                      >
                                            <fieldset>
                                                                  <h4>
                                                                                        Upload Payroll Report CSV
                                                                  </h4>
                                                                  <input
                                                                                        type="file"
                                                                                        id="reportFile"
                                                                  />
                                                                  <input
                                                                                        type="submit"
                                                                                        class="button-primary"
                                                                                        value="Upload"
                                                                  />
                                            </fieldset>
                      </form>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="column"
>
                      <form
                                            action="#"
                                            style={
                                                                  Object {
                                                                                        "textAlign": "center",
                                                                                      }
                                            }
                      >
                                            <fieldset>
                                                                  <h4>
                                                                                        Upload Payroll Report CSV
                                                                  </h4>
                                                                  <input
                                                                                        id="reportFile"
                                                                                        type="file"
                                                                  />
                                                                  <input
                                                                                        className="button-primary"
                                                                                        type="submit"
                                                                                        value="Upload"
                                                                  />
                                            </fieldset>
                      </form>
</div>,
                    "className": "row",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <div
                      className="column"
>
                      <form
                                            action="#"
                                            style={
                                                                  Object {
                                                                                        "textAlign": "center",
                                                                                      }
                                            }
                      >
                                            <fieldset>
                                                                  <h4>
                                                                                        Upload Payroll Report CSV
                                                                  </h4>
                                                                  <input
                                                                                        id="reportFile"
                                                                                        type="file"
                                                                  />
                                                                  <input
                                                                                        className="button-primary"
                                                                                        type="submit"
                                                                                        value="Upload"
                                                                  />
                                            </fieldset>
                      </form>
</div>,
                    "className": "row",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="row"
>
                    <div
                                        class="column"
                    >
                                        <form
                                                            action="#"
                                                            style="text-align: center;"
                                        >
                                                            <fieldset>
                                                                                <h4>
                                                                                                    Upload Payroll Report CSV
                                                                                </h4>
                                                                                <input
                                                                                                    type="file"
                                                                                                    id="reportFile"
                                                                                />
                                                                                <input
                                                                                                    type="submit"
                                                                                                    class="button-primary"
                                                                                                    value="Upload"
                                                                                />
                                                            </fieldset>
                                        </form>
                    </div>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 2,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 10,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                    "lineNumber": 14,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 24,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                      "lineNumber": 4,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 25,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                        "lineNumber": 5,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 26,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                          "lineNumber": 5,
                        },
                        "alternate": null,
                        "child": null,
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {},
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {},
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <hr />,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "hr",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <hr />,
                        "className": "column",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <hr />,
                        "className": "column",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="column"
>
                        <hr />
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="column"
>
                        <hr />
</div>,
                      "className": "row",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <div
                        className="column"
>
                        <hr />
</div>,
                      "className": "row",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="row"
>
                      <div
                                            class="column"
                      >
                                            <hr />
                      </div>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 3,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 1,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 1,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "stateNode": null,
            "tag": 1,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "effectTag": 0,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <Unknown />,
              <Unknown />,
              <Unknown />,
              <Unknown />,
            ],
            "className": "container",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <Unknown />,
              <Unknown />,
              <Unknown />,
              <Unknown />,
            ],
            "className": "container",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": <div
            class="container"
>
            <div
                        class="row"
            >
                        <div
                                    class="column"
                                    style="text-align: center;"
                        >
                                    <h1>
                                                Payroll
                                    </h1>
                        </div>
            </div>
            <div
                        class="row"
            >
                        <div
                                    class="column"
                        >
                                    <hr />
                        </div>
            </div>
            <div
                        class="row"
            >
                        <div
                                    class="column"
                        >
                                    <form
                                                action="#"
                                                style="text-align: center;"
                                    >
                                                <fieldset>
                                                            <h4>
                                                                        Upload Payroll Report CSV
                                                            </h4>
                                                            <input
                                                                        type="file"
                                                                        id="reportFile"
                                                            />
                                                            <input
                                                                        type="submit"
                                                                        class="button-primary"
                                                                        value="Upload"
                                                            />
                                                </fieldset>
                                    </form>
                        </div>
            </div>
            <div
                        class="row"
            >
                        <div
                                    class="column"
                        >
                                    <hr />
                        </div>
            </div>
</div>,
          "tag": 5,
          "treeBaseTime": 0,
          "type": "div",
          "updateQueue": null,
        },
        "effectTag": 1,
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugID": 4,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "alternate": null,
          "child": [Circular],
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 1,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": [Circular],
              "child": null,
              "effectTag": 0,
              "expirationTime": 1,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="container"
                  >
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                                        style="text-align: center;"
                                                      >
                                                                        <h1>
                                                                                          Payroll
                                                                        </h1>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <form
                                                                                          action="#"
                                                                                          style="text-align: center;"
                                                                        >
                                                                                          <fieldset>
                                                                                                            <h4>
                                                                                                                              Upload Payroll Report CSV
                                                                                                            </h4>
                                                                                                            <input
                                                                                                                              type="file"
                                                                                                                              id="reportFile"
                                                                                                            />
                                                                                                            <input
                                                                                                                              type="submit"
                                                                                                                              class="button-primary"
                                                                                                                              value="Upload"
                                                                                                            />
                                                                                          </fieldset>
                                                                        </form>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "expirationTime": 1,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
/>,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "effectTag": 32,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
/>,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                                class="container"
                >
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                                style="text-align: center;"
                                                >
                                                                <h1>
                                                                                Payroll
                                                                </h1>
                                                </div>
                                </div>
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                >
                                                                <hr />
                                                </div>
                                </div>
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                >
                                                                <form
                                                                                action="#"
                                                                                style="text-align: center;"
                                                                >
                                                                                <fieldset>
                                                                                                <h4>
                                                                                                                Upload Payroll Report CSV
                                                                                                </h4>
                                                                                                <input
                                                                                                                type="file"
                                                                                                                id="reportFile"
                                                                                                />
                                                                                                <input
                                                                                                                type="submit"
                                                                                                                class="button-primary"
                                                                                                                value="Upload"
                                                                                                />
                                                                                </fieldset>
                                                                </form>
                                                </div>
                                </div>
                                <div
                                                class="row"
                                >
                                                <div
                                                                class="column"
                                                >
                                                                <hr />
                                                </div>
                                </div>
                </div>
</div>,
              "context": Object {},
              "current": [Circular],
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "remainingExpirationTime": 0,
            },
            "tag": 3,
            "treeBaseTime": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "expirationTime": 0,
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseTime": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 2,
        "treeBaseTime": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="container"
>
        <div
                class="row"
        >
                <div
                        class="column"
                        style="text-align: center;"
                >
                        <h1>
                                Payroll
                        </h1>
                </div>
        </div>
        <div
                class="row"
        >
                <div
                        class="column"
                >
                        <hr />
                </div>
        </div>
        <div
                class="row"
        >
                <div
                        class="column"
                >
                        <form
                                action="#"
                                style="text-align: center;"
                        >
                                <fieldset>
                                        <h4>
                                                Upload Payroll Report CSV
                                        </h4>
                                        <input
                                                type="file"
                                                id="reportFile"
                                        />
                                        <input
                                                type="submit"
                                                class="button-primary"
                                                value="Upload"
                                        />
                                </fieldset>
                        </form>
                </div>
        </div>
        <div
                class="row"
        >
                <div
                        class="column"
                >
                        <hr />
                </div>
        </div>
</div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Unknown />,
          <Unknown />,
          <Unknown />,
          <Unknown />,
        ],
        "className": "container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="row"
>
              <div
                            class="column"
                            style="text-align: center;"
              >
                            <h1>
                                          Payroll
                            </h1>
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
                style={
                                Object {
                                                "textAlign": "center",
                                              }
                }
>
                <h1>
                                Payroll
                </h1>
</div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="column"
                  style="text-align: center;"
>
                  <h1>
                                    Payroll
                  </h1>
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1>
                    Payroll
</h1>,
                  "className": "column",
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <h1>
                      Payroll
</h1>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Payroll",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Payroll",
                    ],
                    "type": "h1",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="row"
>
              <div
                            class="column"
              >
                            <hr />
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
>
                <hr />
</div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="column"
>
                  <hr />
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <hr />,
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <hr />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "hr",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="row"
>
              <div
                            class="column"
              >
                            <form
                                          action="#"
                                          style="text-align: center;"
                            >
                                          <fieldset>
                                                        <h4>
                                                                      Upload Payroll Report CSV
                                                        </h4>
                                                        <input
                                                                      type="file"
                                                                      id="reportFile"
                                                        />
                                                        <input
                                                                      type="submit"
                                                                      class="button-primary"
                                                                      value="Upload"
                                                        />
                                          </fieldset>
                            </form>
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
>
                <form
                                action="#"
                                style={
                                                Object {
                                                                "textAlign": "center",
                                                              }
                                }
                >
                                <fieldset>
                                                <h4>
                                                                Upload Payroll Report CSV
                                                </h4>
                                                <input
                                                                id="reportFile"
                                                                type="file"
                                                />
                                                <input
                                                                className="button-primary"
                                                                type="submit"
                                                                value="Upload"
                                                />
                                </fieldset>
                </form>
</div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="column"
>
                  <form
                                    action="#"
                                    style="text-align: center;"
                  >
                                    <fieldset>
                                                      <h4>
                                                                        Upload Payroll Report CSV
                                                      </h4>
                                                      <input
                                                                        type="file"
                                                                        id="reportFile"
                                                      />
                                                      <input
                                                                        type="submit"
                                                                        class="button-primary"
                                                                        value="Upload"
                                                      />
                                    </fieldset>
                  </form>
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <form
                    action="#"
                    style={
                                        Object {
                                                            "textAlign": "center",
                                                          }
                    }
>
                    <fieldset>
                                        <h4>
                                                            Upload Payroll Report CSV
                                        </h4>
                                        <input
                                                            id="reportFile"
                                                            type="file"
                                        />
                                        <input
                                                            className="button-primary"
                                                            type="submit"
                                                            value="Upload"
                                        />
                    </fieldset>
</form>,
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <form
                      action="#"
                      style="text-align: center;"
>
                      <fieldset>
                                            <h4>
                                                                  Upload Payroll Report CSV
                                            </h4>
                                            <input
                                                                  type="file"
                                                                  id="reportFile"
                                            />
                                            <input
                                                                  type="submit"
                                                                  class="button-primary"
                                                                  value="Upload"
                                            />
                      </fieldset>
</form>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "action": "#",
                      "children": <fieldset>
                        <h4>
                                                Upload Payroll Report CSV
                        </h4>
                        <input
                                                id="reportFile"
                                                type="file"
                        />
                        <input
                                                className="button-primary"
                                                type="submit"
                                                value="Upload"
                        />
</fieldset>,
                      "style": Object {
                        "textAlign": "center",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <fieldset>
                          <h4>
                                                    Upload Payroll Report CSV
                          </h4>
                          <input
                                                    type="file"
                                                    id="reportFile"
                          />
                          <input
                                                    type="submit"
                                                    class="button-primary"
                                                    value="Upload"
                          />
</fieldset>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            <h4>
                              Upload Payroll Report CSV
</h4>,
                            <input
                              id="reportFile"
                              type="file"
/>,
                            <input
                              className="button-primary"
                              type="submit"
                              value="Upload"
/>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <h4>
                              Upload Payroll Report CSV
</h4>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "Upload Payroll Report CSV",
                            },
                            "ref": null,
                            "rendered": Array [
                              "Upload Payroll Report CSV",
                            ],
                            "type": "h4",
                          },
                          Object {
                            "instance": <input
                              type="file"
                              id="reportFile"
/>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "id": "reportFile",
                              "type": "file",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                          Object {
                            "instance": <input
                              type="submit"
                              class="button-primary"
                              value="Upload"
/>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "className": "button-primary",
                              "type": "submit",
                              "value": "Upload",
                            },
                            "ref": null,
                            "rendered": Array [
                              undefined,
                            ],
                            "type": "input",
                          },
                        ],
                        "type": "fieldset",
                      },
                    ],
                    "type": "form",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="row"
>
              <div
                            class="column"
              >
                            <hr />
              </div>
</div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="column"
>
                <hr />
</div>,
              "className": "row",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="column"
>
                  <hr />
</div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <hr />,
                  "className": "column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <hr />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "hr",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": App {
        "_reactInternalFiber": FiberNode {
          "_debugID": 5,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="container"
                    >
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                                                style="text-align: center;"
                                                            >
                                                                                <h1>
                                                                                                    Payroll
                                                                                </h1>
                                                            </div>
                                        </div>
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                            >
                                                                                <hr />
                                                            </div>
                                        </div>
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                            >
                                                                                <form
                                                                                                    action="#"
                                                                                                    style="text-align: center;"
                                                                                >
                                                                                                    <fieldset>
                                                                                                                        <h4>
                                                                                                                                            Upload Payroll Report CSV
                                                                                                                        </h4>
                                                                                                                        <input
                                                                                                                                            type="file"
                                                                                                                                            id="reportFile"
                                                                                                                        />
                                                                                                                        <input
                                                                                                                                            type="submit"
                                                                                                                                            class="button-primary"
                                                                                                                                            value="Upload"
                                                                                                                        />
                                                                                                    </fieldset>
                                                                                </form>
                                                            </div>
                                        </div>
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                            >
                                                                                <hr />
                                                            </div>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="container"
                  >
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                                        style="text-align: center;"
                                                      >
                                                                        <h1>
                                                                                          Payroll
                                                                        </h1>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <form
                                                                                          action="#"
                                                                                          style="text-align: center;"
                                                                        >
                                                                                          <fieldset>
                                                                                                            <h4>
                                                                                                                              Upload Payroll Report CSV
                                                                                                            </h4>
                                                                                                            <input
                                                                                                                              type="file"
                                                                                                                              id="reportFile"
                                                                                                            />
                                                                                                            <input
                                                                                                                              type="submit"
                                                                                                                              class="button-primary"
                                                                                                                              value="Upload"
                                                                                                            />
                                                                                          </fieldset>
                                                                        </form>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 6,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
              "lineNumber": 10,
            },
            "alternate": null,
            "child": FiberNode {
              "_debugID": 7,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                "lineNumber": 11,
              },
              "alternate": null,
              "child": FiberNode {
                "_debugID": 11,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Title.js",
                  "lineNumber": 4,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 12,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Title.js",
                    "lineNumber": 5,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 13,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Title.js",
                      "lineNumber": 6,
                    },
                    "alternate": null,
                    "child": null,
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "Payroll",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "Payroll",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <h1>
                      Payroll
</h1>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <h1>
                      Payroll
</h1>,
                    "className": "column",
                    "style": Object {
                      "textAlign": "center",
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <h1>
                      Payroll
</h1>,
                    "className": "column",
                    "style": Object {
                      "textAlign": "center",
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="column"
                    style="text-align: center;"
>
                    <h1>
                                        Payroll
                    </h1>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 0,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <div
                    className="column"
                    style={
                                        Object {
                                                            "textAlign": "center",
                                                          }
                    }
>
                    <h1>
                                        Payroll
                    </h1>
</div>,
                  "className": "row",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <div
                    className="column"
                    style={
                                        Object {
                                                            "textAlign": "center",
                                                          }
                    }
>
                    <h1>
                                        Payroll
                    </h1>
</div>,
                  "className": "row",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": <div
                  class="row"
>
                  <div
                                    class="column"
                                    style="text-align: center;"
                  >
                                    <h1>
                                                      Payroll
                                    </h1>
                  </div>
</div>,
                "tag": 5,
                "treeBaseTime": 0,
                "type": "div",
                "updateQueue": null,
              },
              "effectTag": 1,
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {},
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {},
              "ref": null,
              "return": [Circular],
              "selfBaseTime": 0,
              "sibling": FiberNode {
                "_debugID": 8,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                  "lineNumber": 12,
                },
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 14,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                    "lineNumber": 4,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 15,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                      "lineNumber": 5,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 16,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                        "lineNumber": 5,
                      },
                      "alternate": null,
                      "child": null,
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {},
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {},
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <hr />,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "hr",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <hr />,
                      "className": "column",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <hr />,
                      "className": "column",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="column"
>
                      <hr />
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 0,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": <div
                      className="column"
>
                      <hr />
</div>,
                    "className": "row",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <div
                      className="column"
>
                      <hr />
</div>,
                    "className": "row",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="row"
>
                    <div
                                        class="column"
                    >
                                        <hr />
                    </div>
</div>,
                  "tag": 5,
                  "treeBaseTime": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "effectTag": 1,
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {},
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {},
                "ref": null,
                "return": [Circular],
                "selfBaseTime": 0,
                "sibling": FiberNode {
                  "_debugID": 9,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                    "lineNumber": 13,
                  },
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 17,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                      "lineNumber": 4,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 18,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                        "lineNumber": 5,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 19,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                          "lineNumber": 6,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 20,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                            "lineNumber": 7,
                          },
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 21,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                              "lineNumber": 8,
                            },
                            "alternate": null,
                            "child": null,
                            "effectTag": 0,
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "Upload Payroll Report CSV",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "Upload Payroll Report CSV",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseTime": 0,
                            "sibling": FiberNode {
                              "_debugID": 22,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                                "lineNumber": 9,
                              },
                              "alternate": null,
                              "child": null,
                              "effectTag": 0,
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "id": "reportFile",
                                "type": "file",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "id": "reportFile",
                                "type": "file",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseTime": 0,
                              "sibling": FiberNode {
                                "_debugID": 23,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/ReportUploader.js",
                                  "lineNumber": 10,
                                },
                                "alternate": null,
                                "child": null,
                                "effectTag": 0,
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "className": "button-primary",
                                  "type": "submit",
                                  "value": "Upload",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "className": "button-primary",
                                  "type": "submit",
                                  "value": "Upload",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseTime": 0,
                                "sibling": null,
                                "stateNode": <input
                                  type="submit"
                                  class="button-primary"
                                  value="Upload"
/>,
                                "tag": 5,
                                "treeBaseTime": 0,
                                "type": "input",
                                "updateQueue": null,
                              },
                              "stateNode": <input
                                type="file"
                                id="reportFile"
/>,
                              "tag": 5,
                              "treeBaseTime": 0,
                              "type": "input",
                              "updateQueue": null,
                            },
                            "stateNode": <h4>
                              Upload Payroll Report CSV
</h4>,
                            "tag": 5,
                            "treeBaseTime": 0,
                            "type": "h4",
                            "updateQueue": null,
                          },
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <h4>
                                Upload Payroll Report CSV
</h4>,
                              <input
                                id="reportFile"
                                type="file"
/>,
                              <input
                                className="button-primary"
                                type="submit"
                                value="Upload"
/>,
                            ],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <h4>
                                Upload Payroll Report CSV
</h4>,
                              <input
                                id="reportFile"
                                type="file"
/>,
                              <input
                                className="button-primary"
                                type="submit"
                                value="Upload"
/>,
                            ],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <fieldset>
                            <h4>
                                                        Upload Payroll Report CSV
                            </h4>
                            <input
                                                        type="file"
                                                        id="reportFile"
                            />
                            <input
                                                        type="submit"
                                                        class="button-primary"
                                                        value="Upload"
                            />
</fieldset>,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "fieldset",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "action": "#",
                          "children": <fieldset>
                            <h4>
                                                        Upload Payroll Report CSV
                            </h4>
                            <input
                                                        id="reportFile"
                                                        type="file"
                            />
                            <input
                                                        className="button-primary"
                                                        type="submit"
                                                        value="Upload"
                            />
</fieldset>,
                          "style": Object {
                            "textAlign": "center",
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "action": "#",
                          "children": <fieldset>
                            <h4>
                                                        Upload Payroll Report CSV
                            </h4>
                            <input
                                                        id="reportFile"
                                                        type="file"
                            />
                            <input
                                                        className="button-primary"
                                                        type="submit"
                                                        value="Upload"
                            />
</fieldset>,
                          "style": Object {
                            "textAlign": "center",
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <form
                          action="#"
                          style="text-align: center;"
>
                          <fieldset>
                                                    <h4>
                                                                              Upload Payroll Report CSV
                                                    </h4>
                                                    <input
                                                                              type="file"
                                                                              id="reportFile"
                                                    />
                                                    <input
                                                                              type="submit"
                                                                              class="button-primary"
                                                                              value="Upload"
                                                    />
                          </fieldset>
</form>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "form",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <form
                          action="#"
                          style={
                                                    Object {
                                                                              "textAlign": "center",
                                                                            }
                          }
>
                          <fieldset>
                                                    <h4>
                                                                              Upload Payroll Report CSV
                                                    </h4>
                                                    <input
                                                                              id="reportFile"
                                                                              type="file"
                                                    />
                                                    <input
                                                                              className="button-primary"
                                                                              type="submit"
                                                                              value="Upload"
                                                    />
                          </fieldset>
</form>,
                        "className": "column",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <form
                          action="#"
                          style={
                                                    Object {
                                                                              "textAlign": "center",
                                                                            }
                          }
>
                          <fieldset>
                                                    <h4>
                                                                              Upload Payroll Report CSV
                                                    </h4>
                                                    <input
                                                                              id="reportFile"
                                                                              type="file"
                                                    />
                                                    <input
                                                                              className="button-primary"
                                                                              type="submit"
                                                                              value="Upload"
                                                    />
                          </fieldset>
</form>,
                        "className": "column",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="column"
>
                        <form
                                                action="#"
                                                style="text-align: center;"
                        >
                                                <fieldset>
                                                                        <h4>
                                                                                                Upload Payroll Report CSV
                                                                        </h4>
                                                                        <input
                                                                                                type="file"
                                                                                                id="reportFile"
                                                                        />
                                                                        <input
                                                                                                type="submit"
                                                                                                class="button-primary"
                                                                                                value="Upload"
                                                                        />
                                                </fieldset>
                        </form>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 0,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": <div
                        className="column"
>
                        <form
                                                action="#"
                                                style={
                                                                        Object {
                                                                                                "textAlign": "center",
                                                                                              }
                                                }
                        >
                                                <fieldset>
                                                                        <h4>
                                                                                                Upload Payroll Report CSV
                                                                        </h4>
                                                                        <input
                                                                                                id="reportFile"
                                                                                                type="file"
                                                                        />
                                                                        <input
                                                                                                className="button-primary"
                                                                                                type="submit"
                                                                                                value="Upload"
                                                                        />
                                                </fieldset>
                        </form>
</div>,
                      "className": "row",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <div
                        className="column"
>
                        <form
                                                action="#"
                                                style={
                                                                        Object {
                                                                                                "textAlign": "center",
                                                                                              }
                                                }
                        >
                                                <fieldset>
                                                                        <h4>
                                                                                                Upload Payroll Report CSV
                                                                        </h4>
                                                                        <input
                                                                                                id="reportFile"
                                                                                                type="file"
                                                                        />
                                                                        <input
                                                                                                className="button-primary"
                                                                                                type="submit"
                                                                                                value="Upload"
                                                                        />
                                                </fieldset>
                        </form>
</div>,
                      "className": "row",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": <div
                      class="row"
>
                      <div
                                            class="column"
                      >
                                            <form
                                                                  action="#"
                                                                  style="text-align: center;"
                                            >
                                                                  <fieldset>
                                                                                        <h4>
                                                                                                              Upload Payroll Report CSV
                                                                                        </h4>
                                                                                        <input
                                                                                                              type="file"
                                                                                                              id="reportFile"
                                                                                        />
                                                                                        <input
                                                                                                              type="submit"
                                                                                                              class="button-primary"
                                                                                                              value="Upload"
                                                                                        />
                                                                  </fieldset>
                                            </form>
                      </div>
</div>,
                    "tag": 5,
                    "treeBaseTime": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "effectTag": 1,
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {},
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {},
                  "ref": null,
                  "return": [Circular],
                  "selfBaseTime": 0,
                  "sibling": FiberNode {
                    "_debugID": 10,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/App.js",
                      "lineNumber": 14,
                    },
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 24,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                        "lineNumber": 4,
                      },
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 25,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                          "lineNumber": 5,
                        },
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 26,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/ravipunj/dev/se-challenge-payroll/payroll-app/src/components/Divider.js",
                            "lineNumber": 5,
                          },
                          "alternate": null,
                          "child": null,
                          "effectTag": 0,
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {},
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {},
                          "ref": null,
                          "return": [Circular],
                          "selfBaseTime": 0,
                          "sibling": null,
                          "stateNode": <hr />,
                          "tag": 5,
                          "treeBaseTime": 0,
                          "type": "hr",
                          "updateQueue": null,
                        },
                        "effectTag": 0,
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <hr />,
                          "className": "column",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <hr />,
                          "className": "column",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseTime": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="column"
>
                          <hr />
</div>,
                        "tag": 5,
                        "treeBaseTime": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "effectTag": 0,
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <div
                          className="column"
>
                          <hr />
</div>,
                        "className": "row",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <div
                          className="column"
>
                          <hr />
</div>,
                        "className": "row",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseTime": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="row"
>
                        <div
                                                class="column"
                        >
                                                <hr />
                        </div>
</div>,
                      "tag": 5,
                      "treeBaseTime": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "effectTag": 1,
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {},
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {},
                    "ref": null,
                    "return": [Circular],
                    "selfBaseTime": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 1,
                    "treeBaseTime": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "stateNode": null,
                  "tag": 1,
                  "treeBaseTime": 0,
                  "type": [Function],
                  "updateQueue": null,
                },
                "stateNode": null,
                "tag": 1,
                "treeBaseTime": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 1,
              "treeBaseTime": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "effectTag": 0,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Unknown />,
                <Unknown />,
                <Unknown />,
                <Unknown />,
              ],
              "className": "container",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Unknown />,
                <Unknown />,
                <Unknown />,
                <Unknown />,
              ],
              "className": "container",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": <div
              class="container"
>
              <div
                            class="row"
              >
                            <div
                                          class="column"
                                          style="text-align: center;"
                            >
                                          <h1>
                                                        Payroll
                                          </h1>
                            </div>
              </div>
              <div
                            class="row"
              >
                            <div
                                          class="column"
                            >
                                          <hr />
                            </div>
              </div>
              <div
                            class="row"
              >
                            <div
                                          class="column"
                            >
                                          <form
                                                        action="#"
                                                        style="text-align: center;"
                                          >
                                                        <fieldset>
                                                                      <h4>
                                                                                    Upload Payroll Report CSV
                                                                      </h4>
                                                                      <input
                                                                                    type="file"
                                                                                    id="reportFile"
                                                                      />
                                                                      <input
                                                                                    type="submit"
                                                                                    class="button-primary"
                                                                                    value="Upload"
                                                                      />
                                                        </fieldset>
                                          </form>
                            </div>
              </div>
              <div
                            class="row"
              >
                            <div
                                          class="column"
                            >
                                          <hr />
                            </div>
              </div>
</div>,
            "tag": 5,
            "treeBaseTime": 0,
            "type": "div",
            "updateQueue": null,
          },
          "effectTag": 1,
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugID": 4,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "alternate": null,
            "child": [Circular],
            "effectTag": 1,
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 1,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "alternate": FiberNode {
                "_debugID": 1,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "alternate": [Circular],
                "child": null,
                "effectTag": 0,
                "expirationTime": 1,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseTime": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                                        class="container"
                    >
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                                                style="text-align: center;"
                                                            >
                                                                                <h1>
                                                                                                    Payroll
                                                                                </h1>
                                                            </div>
                                        </div>
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                            >
                                                                                <hr />
                                                            </div>
                                        </div>
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                            >
                                                                                <form
                                                                                                    action="#"
                                                                                                    style="text-align: center;"
                                                                                >
                                                                                                    <fieldset>
                                                                                                                        <h4>
                                                                                                                                            Upload Payroll Report CSV
                                                                                                                        </h4>
                                                                                                                        <input
                                                                                                                                            type="file"
                                                                                                                                            id="reportFile"
                                                                                                                        />
                                                                                                                        <input
                                                                                                                                            type="submit"
                                                                                                                                            class="button-primary"
                                                                                                                                            value="Upload"
                                                                                                                        />
                                                                                                    </fieldset>
                                                                                </form>
                                                            </div>
                                        </div>
                                        <div
                                                            class="row"
                                        >
                                                            <div
                                                                                class="column"
                                                            >
                                                                                <hr />
                                                            </div>
                                        </div>
                    </div>
</div>,
                  "context": Object {},
                  "current": [Circular],
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "remainingExpirationTime": 0,
                },
                "tag": 3,
                "treeBaseTime": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "expirationTime": 1,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
/>,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "effectTag": 32,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
/>,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseTime": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                                    class="container"
                  >
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                                        style="text-align: center;"
                                                      >
                                                                        <h1>
                                                                                          Payroll
                                                                        </h1>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <form
                                                                                          action="#"
                                                                                          style="text-align: center;"
                                                                        >
                                                                                          <fieldset>
                                                                                                            <h4>
                                                                                                                              Upload Payroll Report CSV
                                                                                                            </h4>
                                                                                                            <input
                                                                                                                              type="file"
                                                                                                                              id="reportFile"
                                                                                                            />
                                                                                                            <input
                                                                                                                              type="submit"
                                                                                                                              class="button-primary"
                                                                                                                              value="Upload"
                                                                                                            />
                                                                                          </fieldset>
                                                                        </form>
                                                      </div>
                                    </div>
                                    <div
                                                      class="row"
                                    >
                                                      <div
                                                                        class="column"
                                                      >
                                                                        <hr />
                                                      </div>
                                    </div>
                  </div>
</div>,
                "context": Object {},
                "current": [Circular],
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "remainingExpirationTime": 0,
              },
              "tag": 3,
              "treeBaseTime": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
/>,
                },
                "expirationTime": 0,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseTime": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 2,
            "treeBaseTime": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseTime": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 2,
          "treeBaseTime": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="container"
>
          <div
                    class="row"
          >
                    <div
                              class="column"
                              style="text-align: center;"
                    >
                              <h1>
                                        Payroll
                              </h1>
                    </div>
          </div>
          <div
                    class="row"
          >
                    <div
                              class="column"
                    >
                              <hr />
                    </div>
          </div>
          <div
                    class="row"
          >
                    <div
                              class="column"
                    >
                              <form
                                        action="#"
                                        style="text-align: center;"
                              >
                                        <fieldset>
                                                  <h4>
                                                            Upload Payroll Report CSV
                                                  </h4>
                                                  <input
                                                            type="file"
                                                            id="reportFile"
                                                  />
                                                  <input
                                                            type="submit"
                                                            class="button-primary"
                                                            value="Upload"
                                                  />
                                        </fieldset>
                              </form>
                    </div>
          </div>
          <div
                    class="row"
          >
                    <div
                              class="column"
                    >
                              <hr />
                    </div>
          </div>
</div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown />,
            <Unknown />,
            <Unknown />,
            <Unknown />,
          ],
          "className": "container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="row"
>
                <div
                                class="column"
                                style="text-align: center;"
                >
                                <h1>
                                                Payroll
                                </h1>
                </div>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
                  style={
                                    Object {
                                                      "textAlign": "center",
                                                    }
                  }
>
                  <h1>
                                    Payroll
                  </h1>
</div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="column"
                    style="text-align: center;"
>
                    <h1>
                                        Payroll
                    </h1>
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <h1>
                      Payroll
</h1>,
                    "className": "column",
                    "style": Object {
                      "textAlign": "center",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <h1>
                        Payroll
</h1>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Payroll",
                      },
                      "ref": null,
                      "rendered": Array [
                        "Payroll",
                      ],
                      "type": "h1",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="row"
>
                <div
                                class="column"
                >
                                <hr />
                </div>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
>
                  <hr />
</div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="column"
>
                    <hr />
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <hr />,
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <hr />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "hr",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="row"
>
                <div
                                class="column"
                >
                                <form
                                                action="#"
                                                style="text-align: center;"
                                >
                                                <fieldset>
                                                                <h4>
                                                                                Upload Payroll Report CSV
                                                                </h4>
                                                                <input
                                                                                type="file"
                                                                                id="reportFile"
                                                                />
                                                                <input
                                                                                type="submit"
                                                                                class="button-primary"
                                                                                value="Upload"
                                                                />
                                                </fieldset>
                                </form>
                </div>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
>
                  <form
                                    action="#"
                                    style={
                                                      Object {
                                                                        "textAlign": "center",
                                                                      }
                                    }
                  >
                                    <fieldset>
                                                      <h4>
                                                                        Upload Payroll Report CSV
                                                      </h4>
                                                      <input
                                                                        id="reportFile"
                                                                        type="file"
                                                      />
                                                      <input
                                                                        className="button-primary"
                                                                        type="submit"
                                                                        value="Upload"
                                                      />
                                    </fieldset>
                  </form>
</div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="column"
>
                    <form
                                        action="#"
                                        style="text-align: center;"
                    >
                                        <fieldset>
                                                            <h4>
                                                                                Upload Payroll Report CSV
                                                            </h4>
                                                            <input
                                                                                type="file"
                                                                                id="reportFile"
                                                            />
                                                            <input
                                                                                type="submit"
                                                                                class="button-primary"
                                                                                value="Upload"
                                                            />
                                        </fieldset>
                    </form>
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <form
                      action="#"
                      style={
                                            Object {
                                                                  "textAlign": "center",
                                                                }
                      }
>
                      <fieldset>
                                            <h4>
                                                                  Upload Payroll Report CSV
                                            </h4>
                                            <input
                                                                  id="reportFile"
                                                                  type="file"
                                            />
                                            <input
                                                                  className="button-primary"
                                                                  type="submit"
                                                                  value="Upload"
                                            />
                      </fieldset>
</form>,
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <form
                        action="#"
                        style="text-align: center;"
>
                        <fieldset>
                                                <h4>
                                                                        Upload Payroll Report CSV
                                                </h4>
                                                <input
                                                                        type="file"
                                                                        id="reportFile"
                                                />
                                                <input
                                                                        type="submit"
                                                                        class="button-primary"
                                                                        value="Upload"
                                                />
                        </fieldset>
</form>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "action": "#",
                        "children": <fieldset>
                          <h4>
                                                    Upload Payroll Report CSV
                          </h4>
                          <input
                                                    id="reportFile"
                                                    type="file"
                          />
                          <input
                                                    className="button-primary"
                                                    type="submit"
                                                    value="Upload"
                          />
</fieldset>,
                        "style": Object {
                          "textAlign": "center",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <fieldset>
                            <h4>
                                                        Upload Payroll Report CSV
                            </h4>
                            <input
                                                        type="file"
                                                        id="reportFile"
                            />
                            <input
                                                        type="submit"
                                                        class="button-primary"
                                                        value="Upload"
                            />
</fieldset>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              <h4>
                                Upload Payroll Report CSV
</h4>,
                              <input
                                id="reportFile"
                                type="file"
/>,
                              <input
                                className="button-primary"
                                type="submit"
                                value="Upload"
/>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            Object {
                              "instance": <h4>
                                Upload Payroll Report CSV
</h4>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "children": "Upload Payroll Report CSV",
                              },
                              "ref": null,
                              "rendered": Array [
                                "Upload Payroll Report CSV",
                              ],
                              "type": "h4",
                            },
                            Object {
                              "instance": <input
                                type="file"
                                id="reportFile"
/>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "id": "reportFile",
                                "type": "file",
                              },
                              "ref": null,
                              "rendered": Array [
                                undefined,
                              ],
                              "type": "input",
                            },
                            Object {
                              "instance": <input
                                type="submit"
                                class="button-primary"
                                value="Upload"
/>,
                              "key": undefined,
                              "nodeType": "host",
                              "props": Object {
                                "className": "button-primary",
                                "type": "submit",
                                "value": "Upload",
                              },
                              "ref": null,
                              "rendered": Array [
                                undefined,
                              ],
                              "type": "input",
                            },
                          ],
                          "type": "fieldset",
                        },
                      ],
                      "type": "form",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="row"
>
                <div
                                class="column"
                >
                                <hr />
                </div>
</div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="column"
>
                  <hr />
</div>,
                "className": "row",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="column"
>
                    <hr />
</div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <hr />,
                    "className": "column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <hr />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "hr",
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
